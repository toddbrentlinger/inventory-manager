# Generated by Django 4.1.6 on 2023-03-19 18:08

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventories', '0001_initial'),
        ('people', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter name of brand (required).', max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.ImageField(help_text='Enter image file.', upload_to='uploads/images/%Y/%m/%d/')),
            ],
            options={
                'ordering': ['image_file'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Enter name of item (required).', max_length=100)),
                ('model_number', models.CharField(blank=True, help_text='Enter model number of item.', max_length=20)),
                ('serial_number', models.CharField(blank=True, help_text='Enter serial number of the specific item.', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Enter description of the item.')),
                ('price', models.IntegerField(blank=True, help_text='Enter price of item in American cents (ex. $23.56 => 2356).')),
                ('purchase_date', models.DateField(blank=True, help_text='Enter date the item was purchased.')),
                ('state', models.CharField(choices=[('POS', 'In Possession'), ('BRWD', 'Borrowed'), ('GFTD', 'Gifted'), ('SLD', 'Sold'), ('THRWN', 'Thrown Away')], default='POS', max_length=5)),
                ('action_state_id', models.UUIDField(blank=True, help_text='Enter ID of ActionItem child model (ex. BorrowedItem id with matching Item id).', null=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(blank=True, help_text='Enter brand of the item.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='items.brand')),
                ('images', models.ManyToManyField(blank=True, help_text='Enter any images of the item.', to='items.image')),
                ('inventory', models.ForeignKey(help_text='Enter inventory that contains the item.', on_delete=django.db.models.deletion.CASCADE, to='inventories.inventory')),
            ],
            options={
                'ordering': ['name', '-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='ThrownAwayItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, help_text='Enter date action occurred.', null=True)),
                ('reason', models.TextField(blank=True, help_text='Enter the reason for taking the action with the item.')),
                ('notes', models.TextField(blank=True, help_text='Enter any notes about the action.')),
                ('item', models.OneToOneField(help_text='Enter item associated with the action.', on_delete=django.db.models.deletion.CASCADE, to='items.item')),
            ],
            options={
                'ordering': ['-date', 'item'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SoldItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, help_text='Enter date action occurred.', null=True)),
                ('reason', models.TextField(blank=True, help_text='Enter the reason for taking the action with the item.')),
                ('notes', models.TextField(blank=True, help_text='Enter any notes about the action.')),
                ('action_type', models.CharField(choices=[('BRWD', 'Borrowed'), ('GFTD', 'Gifted'), ('SLD', 'Sold')], default='BRWD', max_length=4)),
                ('price_sold', models.IntegerField(blank=True, help_text='Enter price the item sold for in American cents (ex. $23.56 => 2356).')),
                ('item', models.OneToOneField(help_text='Enter item associated with the action.', on_delete=django.db.models.deletion.CASCADE, to='items.item')),
                ('reciever', models.ForeignKey(help_text='Enter person who recieved the item.', on_delete=django.db.models.deletion.RESTRICT, to='people.person')),
            ],
            options={
                'ordering': ['-date', 'item'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GiftedItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, help_text='Enter date action occurred.', null=True)),
                ('reason', models.TextField(blank=True, help_text='Enter the reason for taking the action with the item.')),
                ('notes', models.TextField(blank=True, help_text='Enter any notes about the action.')),
                ('action_type', models.CharField(choices=[('BRWD', 'Borrowed'), ('GFTD', 'Gifted'), ('SLD', 'Sold')], default='BRWD', max_length=4)),
                ('item', models.OneToOneField(help_text='Enter item associated with the action.', on_delete=django.db.models.deletion.CASCADE, to='items.item')),
                ('reciever', models.ForeignKey(help_text='Enter person who recieved the item.', on_delete=django.db.models.deletion.RESTRICT, to='people.person')),
            ],
            options={
                'ordering': ['-date', 'item'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BorrowedItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, help_text='Enter date action occurred.', null=True)),
                ('reason', models.TextField(blank=True, help_text='Enter the reason for taking the action with the item.')),
                ('notes', models.TextField(blank=True, help_text='Enter any notes about the action.')),
                ('action_type', models.CharField(choices=[('BRWD', 'Borrowed'), ('GFTD', 'Gifted'), ('SLD', 'Sold')], default='BRWD', max_length=4)),
                ('return_promise_date', models.DateField(help_text='Enter date item is to be returned.')),
                ('has_returned', models.BooleanField(default=False, help_text='Has item been returned?')),
                ('item', models.OneToOneField(help_text='Enter item associated with the action.', on_delete=django.db.models.deletion.CASCADE, to='items.item')),
                ('reciever', models.ForeignKey(help_text='Enter person who recieved the item.', on_delete=django.db.models.deletion.RESTRICT, to='people.person')),
            ],
            options={
                'ordering': ['-date', 'item'],
                'abstract': False,
            },
        ),
    ]
